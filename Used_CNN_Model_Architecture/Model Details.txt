This cnn model can do brain tumor prediction based on cancer level 


accuracy details when creating the model is given below

[INFO] Splitting data to train and test...
Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
conv2d (Conv2D)              (None, 222, 222, 32)      896       
_________________________________________________________________
max_pooling2d (MaxPooling2D) (None, 111, 111, 32)      0         
_________________________________________________________________
conv2d_1 (Conv2D)            (None, 109, 109, 64)      18496     
_________________________________________________________________
max_pooling2d_1 (MaxPooling2 (None, 54, 54, 64)        0         
_________________________________________________________________
conv2d_2 (Conv2D)            (None, 52, 52, 128)       73856     
_________________________________________________________________
max_pooling2d_2 (MaxPooling2 (None, 26, 26, 128)       0         
_________________________________________________________________
flatten (Flatten)            (None, 86528)             0         
_________________________________________________________________
dense (Dense)                (None, 512)               44302848  
_________________________________________________________________
dropout (Dropout)            (None, 512)               0         
_________________________________________________________________
dense_1 (Dense)              (None, 256)               131328    
_________________________________________________________________
dropout_1 (Dropout)          (None, 256)               0         
_________________________________________________________________
dense_2 (Dense)              (None, 5)                 1285      
=================================================================
Total params: 44,528,709
Trainable params: 44,528,709
Non-trainable params: 0
_________________________________________________________________
[INFO] Training network...
Epoch 1/10
120/120 [==============================] - ETA: 0s - loss: 1.2885 - accuracy: 0.5060
Epoch 00001: val_accuracy improved from -inf to 0.56754, saving model to ctscan.hdf5
120/120 [==============================] - 357s 3s/step - loss: 1.2885 - accuracy: 0.5060 - val_loss: 1.0533 - val_accuracy: 0.5675
Epoch 2/10
120/120 [==============================] - ETA: 0s - loss: 0.9403 - accuracy: 0.6387
Epoch 00002: val_accuracy improved from 0.56754 to 0.66597, saving model to ctscan.hdf5
120/120 [==============================] - 355s 3s/step - loss: 0.9403 - accuracy: 0.6387 - val_loss: 0.8496 - val_accuracy: 0.6660
Epoch 3/10
120/120 [==============================] - ETA: 0s - loss: 0.7196 - accuracy: 0.7207
Epoch 00003: val_accuracy improved from 0.66597 to 0.74764, saving model to ctscan.hdf5
120/120 [==============================] - 363s 3s/step - loss: 0.7196 - accuracy: 0.7207 - val_loss: 0.6645 - val_accuracy: 0.7476
Epoch 4/10
120/120 [==============================] - ETA: 0s - loss: 0.5736 - accuracy: 0.7751
Epoch 00004: val_accuracy improved from 0.74764 to 0.75183, saving model to ctscan.hdf5
120/120 [==============================] - 357s 3s/step - loss: 0.5736 - accuracy: 0.7751 - val_loss: 0.6267 - val_accuracy: 0.7518
Epoch 5/10
120/120 [==============================] - ETA: 0s - loss: 0.4491 - accuracy: 0.8314
Epoch 00005: val_accuracy improved from 0.75183 to 0.76754, saving model to ctscan.hdf5
120/120 [==============================] - 386s 3s/step - loss: 0.4491 - accuracy: 0.8314 - val_loss: 0.5724 - val_accuracy: 0.7675
Epoch 6/10
120/120 [==============================] - ETA: 0s - loss: 0.3697 - accuracy: 0.8565
Epoch 00006: val_accuracy improved from 0.76754 to 0.78743, saving model to ctscan.hdf5
120/120 [==============================] - 427s 4s/step - loss: 0.3697 - accuracy: 0.8565 - val_loss: 0.5569 - val_accuracy: 0.7874
Epoch 7/10
120/120 [==============================] - ETA: 0s - loss: 0.3106 - accuracy: 0.8840
Epoch 00007: val_accuracy did not improve from 0.78743
120/120 [==============================] - 404s 3s/step - loss: 0.3106 - accuracy: 0.8840 - val_loss: 0.5878 - val_accuracy: 0.7749
Epoch 8/10
120/120 [==============================] - ETA: 0s - loss: 0.2522 - accuracy: 0.9042
Epoch 00008: val_accuracy improved from 0.78743 to 0.78953, saving model to ctscan.hdf5
120/120 [==============================] - 447s 4s/step - loss: 0.2522 - accuracy: 0.9042 - val_loss: 0.6763 - val_accuracy: 0.7895
Epoch 9/10
120/120 [==============================] - ETA: 0s - loss: 0.2306 - accuracy: 0.9160
Epoch 00009: val_accuracy did not improve from 0.78953
120/120 [==============================] - 413s 3s/step - loss: 0.2306 - accuracy: 0.9160 - val_loss: 0.6257 - val_accuracy: 0.7822
Epoch 10/10
120/120 [==============================] - ETA: 0s - loss: 0.2017 - accuracy: 0.9264
Epoch 00010: val_accuracy did not improve from 0.78953
120/120 [==============================] - 347s 3s/step - loss: 0.2017 - accuracy: 0.9264 - val_loss: 0.6417 - val_accuracy: 0.7885
[INFO] Saving model...


final accuracy : 0.9264 